name: backend container core

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/backend.container.core.yml
      - api/**/*.proto
      - backend/**/*.go

permissions:
  id-token: write
  contents: read

jobs:
  container:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.build-and-push.outputs.image_name }}
      image_tag: ${{ steps.build-and-push.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
   
      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v0"
        with:
          workload_identity_provider: ${{ secrets.GCP_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up gcloud
        uses: "google-github-actions/setup-gcloud@v0"
        
      - name: Docker Authentication
        run: gcloud auth configure-docker

      - name: Backend setup
        uses: ./.github/actions/backend/setup

      - name: Generate connect code
        working-directory: ./api
        run: buf generate --template buf.backend.gen.yaml

      - name: Generate go code
        working-directory: ./backend
        run: |
          go generate ./...
          wire gen ./app/core

      - name: Container build and push
        id: build-and-push
        working-directory: ./backend/app/core
        run: |
          go install github.com/google/ko@latest

          IMAGE_NAME=mndp-core
          echo "image_name=${IMAGE_NAME}" >> $GITHUB_OUTPUT

          IMAGE_TAG=v`date +%Y%m%d%H%M%S`
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

          KO_DOCKER_REPO=gcr.io/${{ secrets.GCP_PROJECT_ID }}/$IMAGE_NAME \
          SOURCE_DATE_EPOCH=$(date +%s) \
          ko build --sbom=none --bare --tags=${IMAGE_TAG},latest ./

  pr:
    needs: container
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      BRANCH_NAME: release/${{needs.container.outputs.image_tag}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install yq
        run: sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && sudo chmod +x /usr/bin/yq

      - name: checkout branch
        run: |
          git branch $BRANCH_NAME
          git checkout $BRANCH_NAME

      - name: Update cloudbuild.yaml
        working-directory: ./infra/gcp/cloudbuild
        run: |
          export IMAGE_NAME=${{needs.container.outputs.image_name}}
          export IMAGE_TAG=${{needs.container.outputs.image_tag}}
          yq '.steps.[0].env.[2]="IMAGE_NAME=" + env(IMAGE_NAME)' cloudbuild.app.core.yaml > tmp.yaml && mv tmp.yaml cloudbuild.app.core.yaml
          yq '.steps.[0].env.[3]="IMAGE_TAG=" + env(IMAGE_TAG)' cloudbuild.app.core.yaml > tmp.yaml && mv tmp.yaml cloudbuild.app.core.yaml

      - name: Git push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "update core container"
          git push --set-upstream origin $BRANCH_NAME

      - name: Create release pr
        env:
            # ghコマンドが参照している環境変数GH_TOKENに、Githubのトークンをセット
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          gh pr create \
            --base main \
            --title "Release core service version ${{needs.build.outputs.image_tag}}" \
            --body "" \
            --label "release"
